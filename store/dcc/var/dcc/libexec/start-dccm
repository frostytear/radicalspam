#! /bin/sh

# start dccm

# This script assumes that it is being run by root or the DCC user, probably
# while the system is starting.  It should be run before sendmail is started
# to avoid complaints from sendmail about the socket not existing.
# See the misc/rcDCC script.

# Copyright (c) 2010 by Rhyolite Software, LLC
#
# This agreement is not applicable to any entity which sells anti-spam
# solutions to others or provides an anti-spam solution as part of a
# security solution sold to other entities, or to a private network
# which employs the DCC or uses data provided by operation of the DCC
# but does not provide corresponding data to other users.
#
# Permission to use, copy, modify, and distribute this software without
# changes for any purpose with or without fee is hereby granted, provided
# that the above copyright notice and this permission notice appear in all
# copies and any distributed versions or copies are either unchanged
# or not called anything similar to "DCC" or "Distributed Checksum
# Clearinghouse".
#
# Parties not eligible to receive a license under this agreement can
# obtain a commercial license to use DCC by contacting Rhyolite Software
# at sales@rhyolite.com.
#
# A commercial license would be for Distributed Checksum and Reputation
# Clearinghouse software.  That software includes additional features.  This
# free license for Distributed ChecksumClearinghouse Software does not in any
# way grant permision to use Distributed Checksum and Reputation Clearinghouse
# software
#
# THE SOFTWARE IS PROVIDED "AS IS" AND RHYOLITE SOFTWARE, LLC DISCLAIMS ALL
# WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL RHYOLITE SOFTWARE, LLC
# BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES
# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
# WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
# ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
#	Rhyolite Software DCC 1.3.138-1.76 $Revision$
#	Generated automatically from start-dccm.in by configure.

exec 1>&2 </dev/null

ARGV0=dccm
LOGGER_TAG=start-dccm
DCC_LOGGER="logger -s -p ${DCC_ERROR_LOG_FACILITY-mail.err} -t ${LOGGER_TAG-DCC}"
DCC_HOMEDIR=/var/dcc
QUIET=yes
# check the args once to get the home directory
while getopts ":xvh:r:u:c:a:l:L:R:w:" c; do
    case $c in
	x) set -x;;
	v) QUIET=;;
	h) DCC_HOMEDIR="$OPTARG";;
	*) ;;
    esac
done
if test -d $DCC_HOMEDIR; then
    # in case of relative paths
    cd $DCC_HOMEDIR
fi
if test ! -s $DCC_HOMEDIR/dcc_conf; then
    eval $DCC_LOGGER \"cannot find $DCC_HOMEDIR/dcc_conf\"
fi
. $DCC_HOMEDIR/dcc_conf
if test 0"$DCC_CONF_VERSION" -lt 2; then
    # deal with bash reserved $UID and old versions of dcc_conf
    if test -z "$DCCUID" -a -n "$UID"; then
	DCCUID="$UID"
    fi
    if test -z "$DCC_RUNDIR" -a -n "$DCCM_RUNDIR"; then
	DCC_RUNDIR="$DCCM_RUNDIR"
    fi
fi

if test "$DCC_HOMEDIR" != /var/dcc; then
    DCCM_ARGS="-h$DCC_HOMEDIR $DCCM_ARGS"
fi

# convert old "dccm -G" to "dccm -Gon"
#   insert " -" before "G" in a string of flags
#   insert " -" after "G"
#   convert "-G" to "-Gon"
#   restore "-Gon -on" to "-Gon"
DCCM_ARGS=`echo "$DCCM_ARGS"						\
	| sed -e 's/-\([VdbxANQW]\{1,\}\)G/-\1 -G/g'			\
	    -e 's/-G\([^- ]\)/-G -\1/g'					\
	    -e 's/-G/-Gon/g'						\
	    -e 's/-G[	 ]*on[-	 ]*on/-Gon/g'`

# add -G to $GREY_CLIENT_ARGS if it is absent
if test -n "$GREY_CLIENT_ARGS"; then
    if test X`expr "X$GREY_CLIENT_ARGS" : '.*\(-G\)'` = X; then
	GREY_CLIENT_ARGS="-G$GREY_CLIENT_ARGS"
    fi
    DCCM_ARGS="$GREY_CLIENT_ARGS $DCCM_ARGS"
fi

if test -n "$DCCM_USERDIRS"; then
    DCCM_ARGS="-U$DCCM_USERDIRS $DCCM_ARGS"
fi


USAGE="`basename $0`: [-xv] [-h homedir] [-r rundir] [-u UID] [-a args] \
	[-l logdir] [-L log-at] [-R reject_at] [-w whiteclnt]"
OPTIND=1
while getopts "xvh:r:u:c:a:l:L:R:w:" c; do
    case $c in
	x) ;;
	v) ;;
	h) ;;
	r) DCC_RUNDIR="$OPTARG";;
	u) DCCUID="$OPTARG";;
	c) X=`expr "X$OPTARG" : '\(X[-._a-zA-Z0-9]*\)'`
	    if test "$X" = X -o "$X" != "X$OPTARG"; then
		eval $DCC_LOGGER \"illegal -c $OPTARG\"
	    else
		ARGV0="$OPTARG"
	    fi;;
	a) DCCM_ARGS="$DCCM_ARGS $OPTARG";;
	l) DCCM_LOGDIR="$OPTARG";;
	L) DCCM_LOG_AT="$OPTARG";;
	R) DCCM_REJECT_AT="$OPTARG";;
	w) DCCM_WHITECLNT="$OPTARG";;
	*) eval $DCC_LOGGER \"$USAGE\"; exit 1;;
    esac
done
shift `expr $OPTIND - 1 || true`
if test "$#" -ne 0; then
    eval $DCC_LOGGER \"$USAGE\"
    exit 1
fi

if test -n "$DCC_RUNDIR" -a "$DCC_RUNDIR" != /var/run/dcc; then
    DCCM_ARGS="-R$DCC_RUNDIR $DCCM_ARGS"
fi
if test -n "$DCCM_LOGDIR"; then
    # add extra quotes for '?' not present in dcc_conf
    if expr "$DCCM_LOGDIR" : '[DHM]?' >/dev/null; then
	DCCM_ARGS="'-l$DCCM_LOGDIR' $DCCM_ARGS"
    else
	DCCM_ARGS="-l$DCCM_LOGDIR $DCCM_ARGS"
    fi
fi
CKS="$REP_ARGS"
if test -n "$DCCM_LOG_AT$DCCM_REJECT_AT"; then
    for CK in ${DCCM_CKSUMS:=CMN} $DCCM_XTRA_CKSUMS; do
	CKS="$CKS -t$CK,$DCCM_LOG_AT,$DCCM_REJECT_AT"
    done
fi
if test -n "$DCCM_WHITECLNT"; then
    CKS="$CKS -w$DCCM_WHITECLNT"
fi
DCCM_ARGS="$CKS $DNSBL_ARGS $DCC_LOG_ARGS $DCCM_ARGS"


# stop an existing dccm
#   signal the process group because on Linux systems it does not work
#   to signal the main process.  See `man sigwait` on a Linux system.
PID=`cat $DCC_RUNDIR/$ARGV0.pid 2>/dev/null`
if test -n "$PID"; then
    if `kill -15 $PID 2>/dev/null`; then
	CNT=0
	while test $CNT -lt 6; do
	    if `/bin/kill -15 $PID 2>/dev/null`; then
		if test -z "$QUIET"; then
		    if test $CNT -eq 0; then
			echo "    stopping dccm PID $PID "  | tr -d '\012'
		    else
			echo "."  | tr -d '\012'
		    fi
		fi
		sleep 1
		CNT=`expr $CNT + 1`
	    else
		break
	    fi
	done
	/bin/kill -9 $PID 2>/dev/null
	if test $CNT -ne 0 -a -z "$QUIET"; then
	    echo
	fi
    fi
fi

# assume unset DCCD_ENABLE is "on" for upward compatibility
case "$DCCM_ENABLE" in
    [oO][fF][fF]) exit 0;;
esac
if test ! -x $DCC_LIBEXEC/dccm; then
    eval $DCC_LOGGER \"cannot start dccm because it has not been installed\"
    exit 1
fi

if test ! -d $DCC_RUNDIR; then
    mkdir $DCC_RUNDIR
fi
if test -n "$DCCUID"; then
    chown $DCCUID "$DCC_RUNDIR"
    if test -d "$DCC_HOMEDIR"; then
	chown "$DCCUID" "$DCC_HOMEDIR"
    fi
    if test -n "$DCCM_LOGDIR" -a -d "$DCCM_LOGDIR"; then
	chown "$DCCUID" "$DCCM_LOGDIR"
    fi
fi


if test "$ARGV0" != dccm -a ! -s $DCC_LIBEXEC/$ARGV0; then
    ln -s dccm $DCC_LIBEXEC/$ARGV0
fi

# first try to use `su -` to set limits
#   fall back to -I for systems where su requires a valid shell in
#	/etc/passwd but the dcc user does not have one
if test -n "$DCCUID" -a X"$DCCUID" != X"$USER"; then
    if TERM= su - "$DCCUID" -c date >/dev/null 2>&1; then
	TERM= su - "$DCCUID" -c "$DCC_LIBEXEC/$ARGV0 $DCCM_ARGS"
	exit
    fi
    DCCM_ARGS="-I$DCCUID $DCCM_ARGS"
fi
eval $DCC_LIBEXEC/$ARGV0 $DCCM_ARGS
