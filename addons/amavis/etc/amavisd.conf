use strict;

# *************************************************************************
# Section I - Essential daemon and MTA settings
# *************************************************************************

$MYHOME 			= '/addons/amavis/var/amavis';
$myhostname			= "$ENV{MY_HOSTNAME}";
$daemon_user  			= 'antispam';  
$daemon_group 			= 'antispam';
$TEMPBASE 			= "$MYHOME/tmp";
$ENV{TMPDIR} 			= $TEMPBASE;

$enable_db 			= 1;
$enable_global_cache 		= 1;

$forward_method 		= 'smtp:[127.0.0.1]:10025';
$notify_method 			= $forward_method;

$max_servers  			= 4;

# Décommenter un bypass pour désactiver le filtrage
#@bypass_virus_checks_maps 	= (1);
#@bypass_spam_checks_maps  	= (1);
#@bypass_banned_checks_maps 	= (1);
@bypass_header_checks_maps 	= (1);

@local_domains_maps 		= ( read_hash("$MYHOME/local_domains") );

$bypass_decode_parts 		= 0;

@keep_decoded_original_maps	= (new_RE(
  qr'^MAIL$',
  qr'^MAIL-UNDECIPHERABLE$',
  qr'^(ASCII(?! cpio)|text|uuencoded|xxencoded|binhex)'i,
));

$enable_dkim_verification       = 0;

# *************************************************************************
# Section II - MTA specific
# *************************************************************************

$insert_received_line 		= 0;
$inet_socket_port 		= [10024, 9998, 10029];
@mynetworks 			= qw( 127.0.0.0/8 );
@mynetworks_maps 		= (read_array("$MYHOME/mynetworks"), \@mynetworks);

# *************************************************************************
# Section III - Logging
# *************************************************************************

$DO_SYSLOG 			= 1;
$log_level 			= 0;
$syslog_priority 		= 'info';
$log_recip_templ 		= undef;

# *************************************************************************
# Section IV - Notifications/DSN, BOUNCE/REJECT/DROP/PASS destiny, quarantine
# *************************************************************************

$notify_virus_admin_templ	= read_text("$MYHOME/notify_virus_admin.txt");
$notify_virus_recips_templ	= read_text("$MYHOME/notify_virus_recips.txt");
$notify_spam_admin_templ	= read_text("$MYHOME/notify_spam_admin.txt");

%final_destiny_by_ccat = (
  CC_VIRUS,      D_DISCARD,
  CC_BANNED,     D_DISCARD,
  CC_UNCHECKED,  D_BOUNCE,
  CC_SPAM,       D_PASS,
  CC_BADH,       D_PASS,
  CC_OVERSIZED,  D_BOUNCE,
  CC_CLEAN,      D_PASS,
  CC_CATCHALL,   D_PASS,
);

$warnvirussender 		= 0;
$warnspamsender 		= 0;
$warnbannedsender 		= 1;
$warnbadhsender 		= 0;
$warnvirusrecip 		= 1;
$warnbannedrecip 		= 1;
$warnbadhrecip 			= 0;
$warn_offsite 			= 1;

my $my_from			= 'root@localhost.org';
my $my_from_rfc2822		= '"Alert" <root@localhost.org>';
my $my_admin			= 'root@localhost.org';

$virus_admin 			= $my_admin;
$spam_admin 			= $my_admin;
$banned_admin 			= $my_admin;
$mailfrom_notify_admin  	= $my_from;
$mailfrom_notify_recip     	= $my_from;
$mailfrom_notify_spamadmin 	= $my_from;
$hdrfrom_notify_sender 		= $my_from_rfc2822;
$hdrfrom_notify_recip 		= $my_from_rfc2822;
$hdrfrom_notify_admin 		= $mailfrom_notify_admin;
$hdrfrom_notify_spamadmin 	= $mailfrom_notify_spamadmin;

$QUARANTINEDIR 			= "$MYHOME/virusmails";
$quarantine_subdir_levels	= 1;

$virus_quarantine_method        = 'local:virus/virus-%i-%n.gz';
$banned_files_quarantine_method = 'smtp:[127.0.0.1]:10025';
$bad_header_quarantine_method   = 'local:badhdr/badhdr-%i-%n.gz';
$spam_quarantine_method         = 'local:spam/spam-%i-%n.gz';
$clean_quarantine_method        = undef;
$archive_quarantine_method      = 'local:archives/%i-%n.gz';

# C'est ce paramètre avec une action D_DISCARD, D_BOUNCE ou D_REJECT
# qui détermine la mise en quarantaine
$virus_quarantine_to 		= undef;
$banned_quarantine_to		= 'quarantaine@localhost.org';
$bad_header_quarantine_to 	= undef;
$spam_quarantine_to       	= undef;
$spam_quarantine_bysender_to 	= undef;
$clean_quarantine_to     	= undef;
$archive_quarantine_to 		= undef;

$X_HEADER_TAG 			= 'X-Virus-Scanned';
$X_HEADER_LINE 			= 'by amavis';

$undecipherable_subject_tag 	= '[*** UNCHECKED ***] ';

$remove_existing_x_scanned_headers 	= 1;
$remove_existing_spam_headers  		= 1;

$banned_filename_re = new_RE(
  qr'.\.(ade|
         adp|
         app|
	 arc|
         bas|
         bat|
         chm|
         cmd|
         com|
         cpl|
         crt|
         fxp|
         hlp|
         hta|
         inf|
         ins|
         isp|
         js|
         jse|
         lnk|
         mdt|
         mdw|
         msc|
         msp|
         mst|
         ops|
         pif|
         prg|
         reg|
         scr|
         sct|
         shb|
         shs|
         vbs|
         wsc|
         wsf|
         wsh
  )$'ix,
);

$banned_namepath_re = undef;

# *************************************************************************
# Section V - Per-recipient and per-sender handling, whitelisting, etc.
# *************************************************************************

$sql_select_white_black_list 	= undef;
$recipient_delimiter 		= '+';
$replace_existing_extension 	= 0;

@whitelist_sender_maps 		= ( read_hash("$MYHOME/whitelist_sender") );
@blacklist_sender_maps 		= ( read_hash("$MYHOME/blacklist_sender") );
@virus_lovers_maps 		= ( read_hash("$MYHOME/virus_lovers") );
@spam_lovers_maps 		= ( read_hash("$MYHOME/spam_lovers") );
@banned_files_lovers_maps 	= ( read_hash("$MYHOME/banned_lovers") );

# *************************************************************************
# Section VI - Resource limits
# *************************************************************************

# *************************************************************************
# Section VII - External programs, virus scanners
# *************************************************************************

$path = '/addons/rs-tools/bin:/bin';
$file   = 'file';

@decoders = (
  ['mail', \&do_mime_decode],
  ['asc',  \&do_ascii],
  ['uue',  \&do_ascii],
  ['hqx',  \&do_ascii],
  ['ync',  \&do_ascii],
  ['F',    \&do_uncompress, ['unfreeze','freeze -d','melt','fcat'] ],
  ['Z',    \&do_uncompress, ['uncompress','gzip -d','zcat'] ],
  ['gz',   \&do_uncompress,  'gzip -d'],
  ['gz',   \&do_gunzip],
  ['bz2',  \&do_uncompress,  'bzip2 -d'],
  ['lzo',  \&do_uncompress,  'lzop -d'],
  ['rpm',  \&do_uncompress, ['rpm2cpio.pl','rpm2cpio'] ],
  ['cpio', \&do_pax_cpio,   ['pax','gcpio','cpio'] ],
  ['tar',  \&do_pax_cpio,   ['pax','gcpio','cpio'] ],
  ['tar',  \&do_tar],
  ['deb',  \&do_ar,          'ar'],
  ['zip',  \&do_unzip],
  ['7z',   \&do_7zip,       ['7zr','7za','7z'] ],
  ['rar',  \&do_unrar,      ['rar','unrar'] ],
  ['arj',  \&do_unarj,      ['arj','unarj'] ],
  ['arc',  \&do_arc,        ['nomarch','arc'] ],
  ['zoo',  \&do_zoo,        ['zoo','unzoo'] ],
  ['lha',  \&do_lha,         'lha'],
  ['doc',  \&do_ole,         'ripole'],
  ['cab',  \&do_cabextract,  'cabextract'],
  ['tnef', \&do_tnef_ext,    'tnef'],
  ['tnef', \&do_tnef],
  ['exe',  \&do_executable, ['rar','unrar'], 'lha', ['arj','unarj'] ],
);

$sa_configpath                  = '/addons/spamassassin/etc';
$sa_local_tests_only 		= 0;
$sa_auto_whitelist 		= 0;
$sa_timeout                     = 30;
$sa_mail_body_size_limit        = 400*1024;

$sa_tag_level_deflt  		= -999.0;
$sa_tag2_level_deflt 		= 8.0;
$sa_tag3_level_deflt 		= 10.0;
$sa_kill_level_deflt 		= $sa_tag3_level_deflt;
$sa_dsn_cutoff_level 		= 999.0;
$sa_quarantine_cutoff_level 	= 50;

$sa_spam_subject_tag 		= undef;
@spam_subject_tag2_maps 	= ('[*** ? SPAM ***] ');
@spam_subject_tag3_maps 	= ('[*** SPAM ***] ');

$sa_spam_modifies_subj 		= 1;
$sa_spam_level_char 		= '*';
$sa_spam_report_header 		= 0;

$first_infected_stops_scan 	= 1;

@av_scanners = (

 ['ClamAV-clamd',
   \&ask_daemon, ["CONTSCAN {}\n", "/addons/clamav/var/clamd"],
   qr/\bOK$/m, qr/\bFOUND$/m,
   qr/^.*?: (?!Infected Archive)(.*) FOUND$/m ],

);

@av_scanners_backup = (

  ['ClamAV-clamscan', '/addons/clamav/bin/clamscan',
    "--stdout --no-summary -r --tempdir=$TEMPBASE {}",
    [0], qr/:.*\sFOUND$/m, qr/^.*?: (?!Infected Archive)(.*) FOUND$/m ],

);

# *************************************************************************
# Section VIII - Debugging
# *************************************************************************

$sa_debug = 0;

# *************************************************************************
# Section IX - Policy banks (dynamic policy switching)
# *************************************************************************

$policy_bank{'AM.PDP'} = {
  protocol => 'AM.PDP',  
  inet_acl => [qw( 127.0.0.1 [::1] )],  
  auth_required_release => 0,
};

$interface_policy{'9998'} = 'AM.PDP';
$interface_policy{'10029'} = 'output';

include_config_files('/addons/amavis/etc/amavisd.d/output.conf');

#-------------
1;  # insure a defined return
