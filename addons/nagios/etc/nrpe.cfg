#############################################################################
# Sample NRPE Config File 
# Written by: Ethan Galstad (nagios@nagios.org)
# 
# Last Modified: 12-11-2006
#
# NOTES:
# This is a sample configuration file for the NRPE daemon.  It needs to be
# located on the remote host that is running the NRPE daemon, not the host
# from which the check_nrpe client is being executed.
#############################################################################


# PID FILE
# The name of the file in which the NRPE daemon should write it's process ID
# number.  The file is only written if the NRPE daemon is started by the root
# user and is running in standalone mode.

pid_file=/var/run/nrpe.pid



# PORT NUMBER
# Port number we should wait for connections on.
# NOTE: This must be a non-priviledged port (i.e. > 1024).
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

server_port=5666



# SERVER ADDRESS
# Address that nrpe should bind to in case there are more than one interface
# and you do not want nrpe to bind on all interfaces.
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

#server_address=192.168.1.1



# NRPE USER
# This determines the effective user that the NRPE daemon should run as.  
# You can either supply a username or a UID.
# 
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

nrpe_user=nagios



# NRPE GROUP
# This determines the effective group that the NRPE daemon should run as.  
# You can either supply a group name or a GID.
# 
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

nrpe_group=nagios



# ALLOWED HOST ADDRESSES
# This is an optional comma-delimited list of IP address or hostnames 
# that are allowed to talk to the NRPE daemon.
#
# Note: The daemon only does rudimentary checking of the client's IP
# address.  I would highly recommend adding entries in your /etc/hosts.allow
# file to allow only the specified host to connect to the port
# you are running this daemon on.
#
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

#allowed_hosts=127.0.0.1,192.168.0.2
 


# COMMAND ARGUMENT PROCESSING
# This option determines whether or not the NRPE daemon will allow clients
# to specify arguments to commands that are executed.  This option only works
# if the daemon was configured with the --enable-command-args configure script
# option.  
#
# *** ENABLING THIS OPTION IS A SECURITY RISK! *** 
# Read the SECURITY file for information on some of the security implications
# of enabling this variable.
#
# Values: 0=do not allow arguments, 1=allow command arguments

dont_blame_nrpe=1



# COMMAND PREFIX
# This option allows you to prefix all commands with a user-defined string.
# A space is automatically added between the specified prefix string and the
# command line from the command definition.
#
# *** THIS EXAMPLE MAY POSE A POTENTIAL SECURITY RISK, SO USE WITH CAUTION! ***
# Usage scenario: 
# Execute restricted commmands using sudo.  For this to work, you need to add
# the nagios user to your /etc/sudoers.  An example entry for alllowing 
# execution of the plugins from might be:
#
# nagios          ALL=(ALL) NOPASSWD: /usr/lib/nagios/plugins/
#
# This lets the nagios user run all commands in that directory (and only them)
# without asking for a password.  If you do this, make sure you don't give
# random users write access to that directory or its contents!

#command_prefix=/usr/bin/sudo 



# DEBUGGING OPTION
# This option determines whether or not debugging messages are logged to the
# syslog facility.
# Values: 0=debugging off, 1=debugging on

debug=0



# COMMAND TIMEOUT
# This specifies the maximum number of seconds that the NRPE daemon will
# allow plugins to finish executing before killing them off.

command_timeout=60



# CONNECTION TIMEOUT
# This specifies the maximum number of seconds that the NRPE daemon will
# wait for a connection to be established before exiting. This is sometimes
# seen where a network problem stops the SSL being established even though
# all network sessions are connected. This causes the nrpe daemons to
# accumulate, eating system resources. Do not set this too low.

connection_timeout=300



# WEEK RANDOM SEED OPTION
# This directive allows you to use SSL even if your system does not have
# a /dev/random or /dev/urandom (on purpose or because the necessary patches
# were not applied). The random number generator will be seeded from a file
# which is either a file pointed to by the environment valiable $RANDFILE
# or $HOME/.rnd. If neither exists, the pseudo random number generator will
# be initialized and a warning will be issued.
# Values: 0=only seed from /dev/[u]random, 1=also seed from weak randomness

#allow_weak_random_seed=1



# INCLUDE CONFIG FILE
# This directive allows you to include definitions from an external config file.

#include=<somefile.cfg>



# INCLUDE CONFIG DIRECTORY
# This directive allows you to include definitions from config files (with a
# .cfg extension) in one or more directories (with recursion).

#include_dir=<somedirectory>
#include_dir=<someotherdirectory>



# COMMAND DEFINITIONS
# Command definitions that this daemon will run.  Definitions
# are in the following format:
#
# command[<command_name>]=<command_line>
#
# When the daemon receives a request to return the results of <command_name>
# it will execute the command specified by the <command_line> argument.
#
# Unlike Nagios, the command line cannot contain macros - it must be
# typed exactly as it should be executed.
#
# Note: Any plugins that are used in the command lines must reside
# on the machine that this daemon is running on!  The examples below
# assume that you have plugins installed in a /usr/local/nagios/libexec
# directory.  Also note that you will have to modify the definitions below
# to match the argument format the plugins expect.  Remember, these are
# examples only!

# The following examples use hardcoded command arguments...

command[check_users]=/home/nagios/libexec/check_users -w 5 -c 10
command[check_load]=/home/nagios/libexec/check_load -w 15,10,5 -c 30,25,20
command[check_disk1]=/home/nagios/libexec/check_disk -w 20% -c 10% -p /dev/sda1
command[check_disk2]=/home/nagios/libexec/check_disk -w 20% -c 10% -p /dev/sda2
command[check_zombie_procs]=/home/nagios/libexec/check_procs -w 5 -c 10 -s Z
command[check_total_procs]=/home/nagios/libexec/check_procs -w 150 -c 200 

#command[check_mailq]=/home/nagios/libexec/check_mailq -w 5 -c 20 -M postfix

# The following examples allow user-supplied arguments and can
# only be used if the NRPE daemon was compiled with support for 
# command arguments *AND* the dont_blame_nrpe directive in this
# config file is set to '1'...

#command[check_users]=/home/nagios/libexec/check_users -w $ARG1$ -c $ARG2$
#command[check_load]=/home/nagios/libexec/check_load -w $ARG1$ -c $ARG2$
#command[check_disk]=/home/nagios/libexec/check_disk -w $ARG1$ -c $ARG2$ -p $ARG3$
#command[check_procs]=/home/nagios/libexec/check_procs -w $ARG1$ -c $ARG2$ -s $ARG3$

# RADICALSPAM LOGS :
command[rs_spam]=/var/rs/addons/nagios/bin/check_radicalspam_logs.sh SPAM $ARG1$ $ARG2$
command[rs_spammy]=/var/rs/addons/nagios/bin/check_radicalspam_logs.sh SPAMMY $ARG1$ $ARG2$
command[rs_virus]=/var/rs/addons/nagios/bin/check_radicalspam_logs.sh VIRUS $ARG1$ $ARG2$
command[rs_banned]=/var/rs/addons/nagios/bin/check_radicalspam_logs.sh BANNED $ARG1$ $ARG2$
command[rs_unchecked]=/var/rs/addons/nagios/bin/check_radicalspam_logs.sh UNCHECKED $ARG1$ $ARG2$
command[rs_process_in]=/var/rs/addons/nagios/bin/check_radicalspam_logs.sh PROCESS_TIME_INPUT $ARG1$ $ARG2$
command[rs_process_out]=/var/rs/addons/nagios/bin/check_radicalspam_logs.sh PROCESS_TIME_OUTPUT $ARG1$ $ARG2$
command[rs_sa_timed_out]=/var/rs/addons/nagios/bin/check_radicalspam_logs.sh SA_TIMED_OUT $ARG1$ $ARG2$

# POSTFIX QUEUES :
command[postfix_QUEUE_ALL]=/var/rs/addons/nagios/bin/check_postfix_queue.sh QUEUE_ALL $ARG1$ $ARG2$
command[postfix_QUEUE_ACTIVE]=/var/rs/addons/nagios/bin/check_postfix_queue.sh QUEUE_ACTIVE $ARG1$ $ARG2$
command[postfix_QUEUE_DEFERRED]=/var/rs/addons/nagios/bin/check_postfix_queue.sh QUEUE_DEFERRED $ARG1$ $ARG2$
command[postfix_QUEUE_HOLD]=/var/rs/addons/nagios/bin/check_postfix_queue.sh QUEUE_HOLD $ARG1$ $ARG2$

# POSTFIX LOGS :
command[postfix_REJECT_5XX]=/var/rs/addons/nagios/bin/check_postfix_logs.sh REJECT_5XX $ARG1$ $ARG2$
command[postfix_REJECT_4XX]=/var/rs/addons/nagios/bin/check_postfix_logs.sh REJECT_4XX $ARG1$ $ARG2$
command[postfix_REJECT_WARNING]=/var/rs/addons/nagios/bin/check_postfix_logs.sh REJECT_WARNING $ARG1$ $ARG2$
command[postfix_REJECT_CLIENT]=/var/rs/addons/nagios/bin/check_postfix_logs.sh REJECT_CLIENT $ARG1$ $ARG2$
command[postfix_REJECT_SENDER]=/var/rs/addons/nagios/bin/check_postfix_logs.sh REJECT_SENDER $ARG1$ $ARG2$
command[postfix_REJECT_RECIPIENT]=/var/rs/addons/nagios/bin/check_postfix_logs.sh REJECT_RECIPIENT $ARG1$ $ARG2$
command[postfix_ERROR]=/var/rs/addons/nagios/bin/check_postfix_logs.sh ERROR $ARG1$ $ARG2$
command[postfix_WARNING]=/var/rs/addons/nagios/bin/check_postfix_logs.sh WARNING $ARG1$ $ARG2$
command[postfix_SMTP_MAIL_SENT]=/var/rs/addons/nagios/bin/check_postfix_logs.sh SMTP_MAIL_SENT $ARG1$ $ARG2$
command[postfix_SMTP_MAIL_DEFERRED]=/var/rs/addons/nagios/bin/check_postfix_logs.sh SMTP_MAIL_DEFERRED $ARG1$ $ARG2$
command[postfix_SMTP_MAIL_BOUNCED]=/var/rs/addons/nagios/bin/check_postfix_logs.sh SMTP_MAIL_BOUNCED $ARG1$ $ARG2$
command[postfix_SMTP_DELAY_EXT]=/var/rs/addons/nagios/bin/check_postfix_logs.sh SMTP_DELAY_EXT $ARG1$ $ARG2$
command[postfix_SMTP_DELAY_LOCAL]=/var/rs/addons/nagios/bin/check_postfix_logs.sh SMTP_DELAY_LOCAL $ARG1$ $ARG2$
command[postfix_MAIL_SIZE]=/var/rs/addons/nagios/bin/check_postfix_logs.sh MAIL_SIZE $ARG1$ $ARG2$

# POSTGREY LOGS :
command[POSTGREY_DELAY]=/var/rs/addons/nagios/bin/check_postfix_logs.sh POSTGREY_DELAY $ARG1$ $ARG2$

# VERSIONS srv_ POUR DEMANDER UN SERVEUR EN PARTICULIER

# RADICALSPAM LOGS :
command[srv_rs_spam]=/var/rs/addons/nagios/bin/check_radicalspam_logs.sh $ARG3$ SPAM $ARG1$ $ARG2$
command[srv_rs_spammy]=/var/rs/addons/nagios/bin/check_radicalspam_logs.sh $ARG3$ SPAMMY $ARG1$ $ARG2$
command[srv_rs_virus]=/var/rs/addons/nagios/bin/check_radicalspam_logs.sh $ARG3$ VIRUS $ARG1$ $ARG2$
command[srv_rs_banned]=/var/rs/addons/nagios/bin/check_radicalspam_logs.sh $ARG3$ BANNED $ARG1$ $ARG2$
command[srv_rs_unchecked]=/var/rs/addons/nagios/bin/check_radicalspam_logs.sh $ARG3$ UNCHECKED $ARG1$ $ARG2$
command[srv_rs_process_in]=/var/rs/addons/nagios/bin/check_radicalspam_logs.sh $ARG3$ PROCESS_TIME_INPUT $ARG1$ $ARG2$
command[srv_rs_process_out]=/var/rs/addons/nagios/bin/check_radicalspam_logs.sh $ARG3$ PROCESS_TIME_OUTPUT $ARG1$ $ARG2$
command[srv_rs_sa_timed_out]=/var/rs/addons/nagios/bin/check_radicalspam_logs.sh $ARG3$ SA_TIMED_OUT $ARG1$ $ARG2$

# POSTFIX QUEUES :
command[srv_postfix_QUEUE_ALL]=/var/rs/addons/nagios/bin/check_postfix_queue.sh $ARG3$ QUEUE_ALL $ARG1$ $ARG2$
command[srv_postfix_QUEUE_ACTIVE]=/var/rs/addons/nagios/bin/check_postfix_queue.sh $ARG3$ QUEUE_ACTIVE $ARG1$ $ARG2$
command[srv_postfix_QUEUE_DEFERRED]=/var/rs/addons/nagios/bin/check_postfix_queue.sh $ARG3$ QUEUE_DEFERRED $ARG1$ $ARG2$
command[srv_postfix_QUEUE_HOLD]=/var/rs/addons/nagios/bin/check_postfix_queue.sh $ARG3$ QUEUE_HOLD $ARG1$ $ARG2$

# POSTFIX LOGS :
command[srv_postfix_REJECT_5XX]=/var/rs/addons/nagios/bin/check_postfix_logs.sh $ARG3$ REJECT_5XX $ARG1$ $ARG2$
command[srv_postfix_REJECT_4XX]=/var/rs/addons/nagios/bin/check_postfix_logs.sh $ARG3$ REJECT_4XX $ARG1$ $ARG2$
command[srv_postfix_REJECT_WARNING]=/var/rs/addons/nagios/bin/check_postfix_logs.sh $ARG3$ REJECT_WARNING $ARG1$ $ARG2$
command[srv_postfix_REJECT_CLIENT]=/var/rs/addons/nagios/bin/check_postfix_logs.sh $ARG3$ REJECT_CLIENT $ARG1$ $ARG2$
command[srv_postfix_REJECT_SENDER]=/var/rs/addons/nagios/bin/check_postfix_logs.sh $ARG3$ REJECT_SENDER $ARG1$ $ARG2$
command[srv_postfix_REJECT_RECIPIENT]=/var/rs/addons/nagios/bin/check_postfix_logs.sh $ARG3$ REJECT_RECIPIENT $ARG1$ $ARG2$
command[srv_postfix_ERROR]=/var/rs/addons/nagios/bin/check_postfix_logs.sh $ARG3$ ERROR $ARG1$ $ARG2$
command[srv_postfix_WARNING]=/var/rs/addons/nagios/bin/check_postfix_logs.sh $ARG3$ WARNING $ARG1$ $ARG2$
command[srv_postfix_SMTP_MAIL_SENT]=/var/rs/addons/nagios/bin/check_postfix_logs.sh $ARG3$ SMTP_MAIL_SENT $ARG1$ $ARG2$
command[srv_postfix_SMTP_MAIL_DEFERRED]=/var/rs/addons/nagios/bin/check_postfix_logs.sh $ARG3$ SMTP_MAIL_DEFERRED $ARG1$ $ARG2$
command[srv_postfix_SMTP_MAIL_BOUNCED]=/var/rs/addons/nagios/bin/check_postfix_logs.sh $ARG3$ SMTP_MAIL_BOUNCED $ARG1$ $ARG2$
command[srv_postfix_SMTP_DELAY_EXT]=/var/rs/addons/nagios/bin/check_postfix_logs.sh $ARG3$ SMTP_DELAY_EXT $ARG1$ $ARG2$
command[srv_postfix_SMTP_DELAY_LOCAL]=/var/rs/addons/nagios/bin/check_postfix_logs.sh $ARG3$ SMTP_DELAY_LOCAL $ARG1$ $ARG2$
command[srv_postfix_MAIL_SIZE]=/var/rs/addons/nagios/bin/check_postfix_logs.sh $ARG3$ MAIL_SIZE $ARG1$ $ARG2$
command[srv_postfix_POSTGREY_DELAY]=/var/rs/addons/nagios/bin/check_postfix_logs.sh $ARG3$ POSTGREY_DELAY $ARG1$ $ARG2$

# POSTGREY LOGS :
command[srv_POSTGREY_DELAY]=/var/rs/addons/nagios/bin/check_postfix_logs.sh $ARG3$ POSTGREY_DELAY $ARG1$ $ARG2$

# DNS :
command[check_dns]=/home/nagios/libexec/check_dns -H 127.0.0.1 -a 'localhost.' -s 127.0.0.1

